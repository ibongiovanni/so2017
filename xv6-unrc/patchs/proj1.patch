diff -rupN so/xv6-unrc/xv6-unrc/Makefile Escritorio/xv6-unrc/xv6-unrc/Makefile
--- so/xv6-unrc/xv6-unrc/Makefile	2017-04-10 23:42:43.596529232 -0300
+++ Escritorio/xv6-unrc/xv6-unrc/Makefile	2017-04-20 12:38:40.404856888 -0300
@@ -172,6 +172,7 @@ UPROGS=\
 	_usertests\
 	_wc\
 	_zombie\
+	_quantumtest\
 
 fs.img: mkfs README $(UPROGS)
 	./mkfs fs.img README $(UPROGS)
diff -rupN so/xv6-unrc/xv6-unrc/param.h Escritorio/xv6-unrc/xv6-unrc/param.h
--- so/xv6-unrc/xv6-unrc/param.h	2017-04-10 23:42:43.596529232 -0300
+++ Escritorio/xv6-unrc/xv6-unrc/param.h	2017-04-20 12:36:42.144856888 -0300
@@ -10,4 +10,4 @@
 #define MAXOPBLOCKS  10  // max # of blocks any FS op writes
 #define LOGSIZE      (MAXOPBLOCKS*3)  // max data sectors in on-disk log
 #define NBUF         (MAXOPBLOCKS*3)  // size of disk block cache
-
+#define QUANTUM 10	 // max ticks a process has to use cpu
\ No hay ningún carácter de nueva línea al final del archivo
diff -rupN so/xv6-unrc/xv6-unrc/proc.c Escritorio/xv6-unrc/xv6-unrc/proc.c
--- so/xv6-unrc/xv6-unrc/proc.c	2017-04-10 23:42:43.600531232 -0300
+++ Escritorio/xv6-unrc/xv6-unrc/proc.c	2017-04-20 12:08:33.920856888 -0300
@@ -282,7 +282,9 @@ scheduler(void)
       // before jumping back to us.
       proc = p;
       switchuvm(p);
+      p->tickscount=0;
       p->state = RUNNING;
+      cprintf("[[planning process %d (%s)]]\n", p->pid, p->name);
       swtch(&cpu->scheduler, proc->context);
       switchkvm();
 
diff -rupN so/xv6-unrc/xv6-unrc/proc.h Escritorio/xv6-unrc/xv6-unrc/proc.h
--- so/xv6-unrc/xv6-unrc/proc.h	2017-04-10 23:42:43.600531232 -0300
+++ Escritorio/xv6-unrc/xv6-unrc/proc.h	2017-04-20 11:17:02.004529499 -0300
@@ -42,7 +42,7 @@ extern struct proc *proc asm("%gs:4");
 // at the "Switch stacks" comment. Switch doesn't save eip explicitly,
 // but it is on the stack and allocproc() manipulates it.
 struct context {
-  uint edi;
+    uint edi;
   uint esi;
   uint ebx;
   uint ebp;
@@ -66,6 +66,7 @@ struct proc {
   struct file *ofile[NOFILE];  // Open files
   struct inode *cwd;           // Current directory
   char name[16];               // Process name (debugging)
+  char tickscount;             // Ticks counter for timeslice
 };
 
 // Process memory is laid out contiguously, low addresses first:
diff -rupN so/xv6-unrc/xv6-unrc/trap.c Escritorio/xv6-unrc/xv6-unrc/trap.c
--- so/xv6-unrc/xv6-unrc/trap.c	2017-04-10 23:42:43.600531232 -0300
+++ Escritorio/xv6-unrc/xv6-unrc/trap.c	2017-04-20 11:43:29.408856888 -0300
@@ -102,8 +102,10 @@ trap(struct trapframe *tf)
 
   // Force process to give up CPU on clock tick.
   // If interrupts were on while locks held, would need to check nlock.
-  if(proc && proc->state == RUNNING && tf->trapno == T_IRQ0+IRQ_TIMER)
-    yield();
+  if(proc && proc->state == RUNNING && tf->trapno == T_IRQ0+IRQ_TIMER){
+      proc->tickscount++;                            //Increase the pocess ticks counter
+      if (proc->tickscount > QUANTUM) yield();  //Realease the CPU if quamtum is over
+  }
 
   // Check if the process has been killed since we yielded
   if(proc && proc->killed && (tf->cs&3) == DPL_USER)
diff -rupN so/xv6-unrc/xv6-unrc/user/param.h Escritorio/xv6-unrc/xv6-unrc/user/param.h
--- so/xv6-unrc/xv6-unrc/user/param.h	2017-04-10 23:42:43.596529232 -0300
+++ Escritorio/xv6-unrc/xv6-unrc/user/param.h	2017-04-20 12:36:42.144856888 -0300
@@ -10,4 +10,4 @@
 #define MAXOPBLOCKS  10  // max # of blocks any FS op writes
 #define LOGSIZE      (MAXOPBLOCKS*3)  // max data sectors in on-disk log
 #define NBUF         (MAXOPBLOCKS*3)  // size of disk block cache
-
+#define QUANTUM 10	 // max ticks a process has to use cpu
\ No hay ningún carácter de nueva línea al final del archivo
diff -rupN so/xv6-unrc/xv6-unrc/user/quantumtest.c Escritorio/xv6-unrc/xv6-unrc/user/quantumtest.c
--- so/xv6-unrc/xv6-unrc/user/quantumtest.c	1969-12-31 21:00:00.000000000 -0300
+++ Escritorio/xv6-unrc/xv6-unrc/user/quantumtest.c	2017-04-20 12:33:57.696856888 -0300
@@ -0,0 +1,18 @@
+#include "types.h"
+#include "stat.h"
+#include "user.h"
+#include "fs.h"
+
+int 
+main(void)
+{	
+	int i=50000;
+	int p=1;
+	while(i>0){
+		if (i%2==0) p+=i;
+		else p-=i;
+		i--;
+	}
+	printf(1,"p = %d\n",p );
+	exit();
+}
\ No hay ningún carácter de nueva línea al final del archivo
